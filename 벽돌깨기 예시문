import pygame
import sys

# 초기화
pygame.init()

# 화면 설정
WIDTH, HEIGHT = 800, 600
screen = pygame.display.set_mode((WIDTH, HEIGHT))
pygame.display.set_caption("벽돌 깨기")

# 색깔
WHITE = (255, 255, 255)
BLUE = (0, 0, 255)
RED = (255, 0, 0)

# 패들 설정
paddle_width, paddle_height = 100, 20
paddle_x = (WIDTH - paddle_width) // 2
paddle_y = HEIGHT - 50

# 공 설정
ball_radius = 10
ball_x = WIDTH // 2
ball_y = HEIGHT // 2
ball_dx = 5
ball_dy = -5

# 벽돌 설정
brick_width, brick_height = 100, 30
brick_cols = 8
brick_rows = 5
bricks = []
for row in range(brick_rows):
    for col in range(brick_cols):
        brick_x = col * (brick_width + 5) + 30
        brick_y = row * (brick_height + 5) + 30
        bricks.append(pygame.Rect(brick_x, brick_y, brick_width, brick_height))

# 게임 루프
while True:
    for event in pygame.event.get():
        if event.type == pygame.QUIT:
            pygame.quit()
            sys.exit()

    # 패들 이동
    keys = pygame.key.get_pressed()
    if keys[pygame.K_LEFT]:
        paddle_x -= 5
    if keys[pygame.K_RIGHT]:
        paddle_x += 5

    # 공 이동
    ball_x += ball_dx
    ball_y += ball_dy

    # 공과 패들 충돌 처리
    if pygame.Rect(ball_x - ball_radius, ball_y - ball_radius, ball_radius * 2, ball_radius * 2).colliderect(
            pygame.Rect(paddle_x, paddle_y, paddle_width, paddle_height)):
        ball_dy = -ball_dy

    # 벽돌과 공 충돌 처리
    for brick in bricks:
        if brick.colliderect(pygame.Rect(ball_x - ball_radius, ball_y - ball_radius, ball_radius * 2, ball_radius * 2)):
            bricks.remove(brick)
            ball_dy = -ball_dy

    # 공이 화면 경계에 닿으면 튕기기
    if ball_x <= 0 or ball_x >= WIDTH:
        ball_dx = -ball_dx
    if ball_y <= 0:
        ball_dy = -ball_dy

    # 패들이 화면 경계를 넘어가지 않도록 제한
    if paddle_x <= 0:
        paddle_x = 0
    elif paddle_x + paddle_width >= WIDTH:
        paddle_x = WIDTH - paddle_width

    # 화면 그리기
    screen.fill(WHITE)
    pygame.draw.rect(screen, BLUE, (paddle_x, paddle_y, paddle_width, paddle_height))
    pygame.draw.circle(screen, RED, (ball_x, ball_y), ball_radius)
    for brick in bricks:
        pygame.draw.rect(screen, BLUE, brick)
    pygame.display.flip()
    pygame.time.Clock().tick(60)
